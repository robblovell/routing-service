{"version":3,"sources":["gulpfile.coffee"],"names":[],"mappings":"AACA,IAAA;;AAAA,IAAA,GAAO,OAAA,CAAQ,MAAR;;AACP,KAAA,GAAQ,OAAA,CAAQ,WAAR;;AACR,MAAA,GAAS,OAAA,CAAQ,aAAR;;AACT,UAAA,GAAa,OAAA,CAAQ,iBAAR;;AACb,KAAA,GAAQ,OAAA,CAAQ,OAAR;;AACR,IAAA,GAAO,OAAA,CAAQ,MAAR;;AACP,GAAA,GAAM,OAAA,CAAQ,UAAR;;AACN,EAAA,GAAK,OAAA,CAAQ,SAAR;;AACL,IAAA,GAAO,OAAA,CAAQ,WAAR;;AACP,MAAA,GAAS,OAAA,CAAQ,aAAR;;AACT,WAAA,GAAc,OAAA,CAAQ,sBAAR;;AAEd,OAAA,GAAU;;AACV,aAAA,GAAgB;;AAChB,WAAA,GAAc,CAAC,aAAD;;AACd,SAAA,GAAY,CAAC,mBAAD;;AACZ,WAAA,GAAc,CAAC,gCAAD;;AAEd,WAAA,GAAc,SAAC,GAAD;EACV,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,QAAJ,CAAA,CAAZ;SACA,IAAC,CAAA,IAAD,CAAM,KAAN;AAFU;;AAId,IAAI,CAAC,IAAL,CAAU,OAAV,EAAmB,SAAA;SACf,IAAI,CAAC,GAAL,CAAS,WAAT,CACA,CAAC,IADD,CAEI,GAAA,CAAI,SAAC,IAAD,EAAO,CAAP;WACA,KAAA,CAAM,IAAI,CAAC,IAAX;EADA,CAAJ,CAFJ;AADe,CAAnB;;AAQA,IAAI,CAAC,IAAL,CAAU,eAAV,EAA2B,SAAA;SACvB,IAAI,CAAC,GAAL,CAAS,WAAT,CACA,CAAC,IADD,CACM,UAAU,CAAC,IAAX,CAAA,CADN,CAEA,CAAC,IAFD,CAEM,WAAA,CAAY,MAAA,CAAO;IAAC,IAAA,EAAM,IAAP;GAAP,CAAoB,CAAC,EAArB,CAAwB,OAAxB,EAAiC,KAAK,CAAC,GAAvC,CAAZ,EAAyD,OAAzD,CAFN,CAGA,CAAC,IAHD,CAGM,WAAA,CAAY,UAAU,CAAC,KAAX,CAAiB,IAAjB,CAAZ,EAAoC,OAApC,CAHN,CAIA,CAAC,IAJD,CAIM,WAAA,CAAY,IAAI,CAAC,IAAL,CAAU,SAAC,IAAD;AAAU,WAAO,IAAI,CAAC;EAAtB,CAAV,CAAZ,EAAmD,OAAnD,CAJN;AADuB,CAA3B;;AAkBA,IAAI,CAAC,IAAL,CAAU,KAAV,EAAkB,SAAA;AACd,SAAO,IAAI,CAAC,GAAL,CAAS,gBAAT,CACP,CAAC,IADM,CACD,MAAA,CAAA,CADC,CAEP,CAAC,IAFM,CAED,IAAI,CAAC,IAAL,CAAU,aAAV,CAFC;AADO,CAAlB;;AAMA,IAAI,CAAC,IAAL,CAAU,OAAV,EAAmB,SAAA;SACf,IAAI,CAAC,KAAL,CAAW,WAAX,EAAwB,CAAC,eAAD,CAAxB;AADe,CAAnB;;AAMA,IAAI,CAAC,IAAL,CAAU,OAAV,EAAmB,CAAC,eAAD,CAAnB;;AAEA,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,CAAC,OAAD,EAAU,eAAV,CAArB;;AAEA,IAAI,CAAC,IAAL,CAAU,MAAV,EAAkB,CAAC,SAAA,GAAA,CAAD,CAAlB","file":"gulpfile.js","sourceRoot":"/source/","sourcesContent":["# Gulp stuff.\ngulp = require('gulp')\ngutil = require('gulp-util')\ncoffee = require('gulp-coffee')\nsourcemaps = require('gulp-sourcemaps')\ntouch = require('touch')\npath = require('path')\ntap = require('gulp-tap')\nsh = require('shelljs')\njade = require('gulp-jade')\nstylus = require('gulp-stylus')\nparallelize = require(\"concurrent-transform\")\n\nthreads = 100\nuseSourceMaps = true\ncoffeeFiles = ['**/*.coffee']\njadeFiles = ['./views/**/*.jade']\nstylusFiles = ['./public/stylesheets/**/*.styl']\n\nhandleError = (err) ->\n    console.log(err.toString())\n    @emit('end')\n\ngulp.task('touch', () ->\n    gulp.src(coffeeFiles)\n    .pipe(\n        tap((file, t) ->\n            touch(file.path)\n        )\n    )\n)\ngulp.task('coffeescripts', () ->\n    gulp.src(coffeeFiles)\n    .pipe(sourcemaps.init())\n    .pipe(parallelize(coffee({bare: true}).on('error', gutil.log), threads))\n    .pipe(parallelize(sourcemaps.write('./'), threads))\n    .pipe(parallelize(gulp.dest((file) -> return file.base), threads))\n)\n\n#gulp.task('jadescripts', () ->\n#    gulp.src(jadeFiles)\n#    .pipe(parallelize(jade().on('error', gutil.log), threads))\n#)\n#\n#gulp.task('stylusscripts', () ->\n#    gulp.src(stylusFiles)\n#    .pipe(parallelize(stylus().on('error', gutil.log), threads))\n#)\n\ngulp.task('one',  () ->\n    return gulp.src('./css/one.styl')\n    .pipe(stylus())\n    .pipe(gulp.dest('./css/build'))\n)\n\ngulp.task('watch', () ->\n    gulp.watch(coffeeFiles, ['coffeescripts'])\n#    gulp.watch(jadeFiles, ['jadescripts'])\n#    gulp.watch(stylusFiles, ['stylusscripts'])\n)\n\ngulp.task('build', ['coffeescripts']) # ,'jadescripts','stylusscripts'])\n\ngulp.task('default', ['watch', 'coffeescripts'])\n\ngulp.task('done', (() -> ))"]}